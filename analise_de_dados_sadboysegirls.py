# -*- coding: utf-8 -*-
"""An√°lise de dados sadboysegirls.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e13wane3IMD2oqNoz6xiFf1MchjRiLd6
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
import streamlit as st
from geopy.geocoders import Nominatim

df = pd.read_csv("student_depression_dataset.csv")

st.markdown("# An√°lise de Dados - Estudantes e Depress√£o")
st.write("## Visualiza√ß√£o dos primeiros dados:")
st.write(df.head())

media_idade_depressao = df.query("Depression == 1")['Age'].mean() # faz a m√©dia de idade das pessoas com depress√£o
st.write(f"### M√©dia de idade das pessoas com depress√£o: {media_idade_depressao:.2f} anos")

contagem_depressao_por_habito = df[df['Depression'] == 1].groupby('Dietary Habits')['Depression'].count()
df_contagem_depressao_por_habito = contagem_depressao_por_habito.reset_index()
df_contagem_depressao_por_habito.columns = ["Dietary Habits", "total"]
st.write("### Contagem de Estudantes com depress√£o por h√°bitos alimentares:")
st.write(df_contagem_depressao_por_habito)

media_sono_depressao = df[df['Depression'] == 1].groupby('Sleep Duration')['Depression'].count() # faz a contagem da hora de sono dos usu√°rios com depress√£o
df_media_sono_depressao = media_sono_depressao.reset_index()
df_media_sono_depressao.columns = ["Sleep Duration", "total"]
st.write("### Contagem de Estudantes com depress√£o  por dura√ß√£o do sono: ")
st.write(df_media_sono_depressao)

media_cidade_depressao = df[df['Depression'] == 1].groupby('City')['Depression'].count() # faz a contagem da hora de sono dos usu√°rios com depress√£o
#print (media_cidade_depressao)
df_media_cidade_depressao = media_cidade_depressao.reset_index()
df_media_cidade_depressao.columns = ["City", "total"]
st.write("### Contagem de Estudantes com depress√£o pelas cidades da √≠ndia: ")
st.write(df_media_cidade_depressao)

df = df[~df['City'].isin(['City', '3.0'])].reset_index(drop=True) #limpando datafram retirando o nome de cidades n√£o existentes

st.markdown("## Gr√°ficos")

st.markdown("## Gr√°fico de Contagem de Sono de Estudantes com Depress√£o")
fig, ax = plt.subplots()
sns.barplot(x="Sleep Duration", y="total", data = df_media_sono_depressao, ax=ax) #grafico contagem de sono de pessoas com depressao
ax.set_title("Contagem de Sono de Estudantes com Depress√£o", pad=5)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha="right")
fig.tight_layout()
st.pyplot(fig)

st.markdown("## Gr√°fico de Contagem de H√°bitos Alimentares de Estudantes com Depress√£o")
fig2, ax = plt.subplots()
sns.barplot(x="Dietary Habits", y="total", data = df_contagem_depressao_por_habito, ax=ax) #habitos alimentares de pessoas depressivas
ax.set_title("Contagem de H√°bitos Alimentares de Estudantes com Depress√£o", pad=5)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha="right")
fig2.tight_layout()
st.pyplot(fig2)

capitais = df_media_cidade_depressao['City'].dropna().unique().tolist()
geolocator = Nominatim(user_agent="Coordenadas")

coordenadas = []
for cidade in capitais:
    try:
        location = geolocator.geocode(cidade)
        if location:
            lat, lon = location.latitude, location.longitude
            coordenadas.append((cidade, lat, lon))
        else:
            coordenadas.append((cidade, None, None))  # Tratamento para casos onde geocodifica√ß√£o falha
    except Exception as e:
        print(f"Erro ao geolocalizar a cidade {cidade}: {e}")
        coordenadas.append((None, None))

# Criando um novo DataFrame com as cidades e suas respectivas coordenadas
df_com_coordenadas = pd.merge(df_media_cidade_depressao, df_coordenadas, on='City')
df_com_coordenadas = df_com_coordenadas.dropna(subset=['Latitude', 'Longitude'])
#st.write(df_com_coordenadas)
st.write("### Mapa de distribui√ß√£o de Estudantes com depress√£o pelas cidades da √≠ndia: ")

df_com_coordenadas['color'] = df_com_coordenadas['total']
mapa = px.scatter_mapbox(df_com_coordenadas, lon="Longitude", lat="Latitude", color="color", size= "total", mapbox_style="open-street-map", zoom = 3)
mapa.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
st.plotly_chart(mapa)

st.markdown("#### Obrigada pela aten√ß√£o! ‚úåüèΩ ")
